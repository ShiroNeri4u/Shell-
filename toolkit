function InitToolkit () {

  DefClass=""

  function @DefClass() {
    DefClass="$1"
    eval _Class_${DefClass}_Attributes=""
    eval _Class_${DefClass}_Arrays=""
    eval _Class_${DefClass}_Methods=\"${DefClass}::${DefClass} \"
    eval "${DefClass}::${DefClass} () { return 0; }"
    if [ "$#" = "3" -a "$2" = ":" ]; then
      eval local _ParentAttributes=\$_Class_$3_Attributes
      eval local _Attributes=_Class_${DefClass}_Attributes
      eval $_Attributes+=\"\${_ParentAttributes}\"
      eval local _ParentArrays=\$_Class_$3_Arrays
      eval local _Arrays=_Class_${DefClass}_Arrays
      eval $_Arrays+=\"\${_ParentArrays}\"
      eval local _ParentMethods=\$_Class_$3_Methods
      eval local _Methods=_Class_${DefClass}_Methods
      eval $_Methods+=\"\${_ParentMethods}\"
    fi
  }

  function @DefAttribute () {
    local _Attributes="_Class_${DefClass}_Attributes"
    eval $_Attributes+=\"\$1 \"
  }

  function @DefArray () {
    local _Arrays="_Class_${DefClass}_Arrays"
    eval $_Arrays+=\"\$1 \"
  }

  function @DefMethod () {
    local _Methods="_Class_${DefClass}_Methods"
    eval $_Methods+=\"\${DefClass}::\$1 \"
  }

  function _LoadAttributes () {
    eval local _Attributes=\"\$_Class_${_Class}_Attributes\"
    local _Attribute
    for _Attribute in $_Attributes; do
      eval this_${_Attribute}=\"\$_Instance_${_Instance}_${_Attribute}\"
    done
  }

  function _LoadArrays () {
    eval local _Arrays=\"\$_Class_${_Class}_Arrays\"
    local _Array
    for _Array in $_Arrays; do
      eval this_${_Array}=\(\${_Instance_${_Instance}_${_Array}\[\@\]}\)
    done
  }

  function _LoadMethods () {
    eval local _Methods=\"\$_Class_${_Class}_Methods\"
    local _OriginalMethod
    for _OriginalMethod in $_Methods; do
      local _Method=$(_MethodName $_OriginalMethod)
      eval "this.${_Method} () { ${_OriginalMethod} \"\$@\"; return \$?; }"
    done
  }

  function _SaveAttributes () {
    eval local _Attributes=\"\$_Class_${_Class}_Attributes\"
    local _Attribute
    for _Attribute in $_Attributes; do
      eval _Instance_${_Instance}_${_Attribute}=\"\$this_${_Attribute}\"
      unset -v this_${_Attribute}
    done
  }

  function _SaveArrays () {
    eval local _Arrays=\"\$_Class_${_Class}_Arrays\"
    local _Array
    for _Array in $_Arrays; do
      eval _Instance_${_Instance}_${_Array}=\(\${this_${_Array}\[\@\]}\)
      unset -v this_${_Array}
    done
  }

  function _ClearMethods () {
    eval local _Methods=\"\$_Class_${_Class}_Methods\"
    local _OriginalMethod
    for _OriginalMethod in $_Methods; do
      local _Method=$(_MethodName $_OriginalMethod)
      unset -f this.${_Method}
    done
  }

  function _MethodName () {
    echo $1 | awk -F :: '{print $2}'
  }

  function @TypeOf () {
    eval echo \$_TypeOf_$1
  }

  function @New () {
    local _instance="$(uuidgen | tr A-F a-f | sed -e "s/-//g")$(date +%s%3N)"
    local _class=$1
    local _object=$2
    shift 2
    eval _TypeOf_${_instance}=$_class
    eval ${_object}=$_instance
    local _originalmethod
    eval local _methods=\"\$_Class_${_class}_Methods\"
    for _originalmethod in $_methods; do
      local _method=$(_MethodName $_originalmethod)
      eval "${_object}.${_method} () { local _Instance=$_instance; local _Class=$_class; _LoadAttributes; _LoadArrays ; _LoadMethods; ${_originalmethod} \"\$@\"; local rt=\$?; _SaveAttributes; _SaveArrays; _ClearMethods; return $rt; }"
    done
    eval ${_object}.${_class} \"\$@\" || true
  }
 
  function @Destory () {
  eval local _instance=\$$1
  eval local _class=\$_TypeOf_${_instance}
  eval local _attributes=\$_Class_${_class}_Attributes
  eval local _arrays=\$_Class_${_class}_Arrays
  eval local _methods=\$_Class_${_class}_Methods
  unset $1
  unset _TypeOf_${_instance}
  local _attribute
  for _attribute in $_attributes; do
    unset -v _Instance_${_instance}_${_attribute}
  done
  local _array
  for _array in $_arrays; do
    unset -v _Instance_${_instance}_${_array}
  done
  local _originalmethod
  for _originalmethod in $_methods; do
    local method=$(_MethodName $_originalmethod)
    unset -f $1.$method
  done
  }

}